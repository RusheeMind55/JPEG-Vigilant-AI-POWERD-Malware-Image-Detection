package com.dao;

import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Random;

import javax.servlet.http.Part;

import com.bean.TitleBean;
import com.bean.UploadBean;

import com.bean.Userbean;
import com.connection.DBConnection;

public class UserDao {
	
	Connection connection=null;
	Boolean resultStatus=Boolean.FALSE;
	PreparedStatement ps;
	ResultSet rs;
    Statement st=null;
    String sql;
    boolean flag = false;
	
	public boolean InsertUserData(Userbean userbean) {
		sql = "insert into user(name,email,pass,cpass,status) values(?,?,?,?,?)";

		Connection con = DBConnection.getConnection();

		try {
			ps = con.prepareStatement(sql);

			ps.setString(1, userbean.getName());
			ps.setString(2, userbean.getEmail());
			ps.setString(3, userbean.getPass());
			ps.setString(4, userbean.getCpass());
			ps.setString(5, userbean.getStatus());

			int index = ps.executeUpdate();

			if (index > 0) {
				flag = true;
			} else {
				flag = false;
			}
		} catch (SQLException e) {

			e.printStackTrace();
		}
		return flag;
	}
	
	public boolean alreadyUser(String email) throws SQLException {
		String sql="select * from user where email=?";
		connection=DBConnection.getConnection();
		ps=connection.prepareStatement(sql);
		ps.setString(1, email);
		rs=ps.executeQuery();
		if(rs.next())
		{
			resultStatus=true;
		}
		return resultStatus;
	}
	
 public Userbean CheckUser(String email, String pass) {
		
		Userbean bean=new Userbean();
		sql = "select * from user where email='" + email + "' and pass='" + pass + "' ";
		int flag = 0;
		try {
			Statement stmt = DBConnection.getConnection().createStatement();
			ResultSet rs = stmt.executeQuery(sql);
			
			if (rs.next()) {
				flag = 1;
				bean.setId(rs.getInt(1));
				bean.setName(rs.getString(2));
				bean.setEmail(rs.getString(3));
				bean.setPass(rs.getString(4));
				bean.setCpass(rs.getString(5));
				bean.setStatus(rs.getString(6));
			}

		} catch (SQLException e) {

			e.printStackTrace();
		}
		if(flag ==1)
			return bean;
		else 
			return null;
	}

public boolean BookEvent(Userbean bean) {
	sql = "insert into bdayevent(image,imagename,selectevent,age,selecttheme,name,address,email,mobileno,date,status) values(?,?,?,?,?,?,?,?,?,?,?)";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);

		ps.setBlob(1, bean.getImage());
		ps.setString(2, bean.getImage_name());	
		ps.setString(3, bean.getSelectevent());
		ps.setString(4, bean.getAge());
		ps.setString(5, bean.getSelecttheme());
		ps.setString(6, bean.getName());
		ps.setString(7, bean.getAddress());
		ps.setString(8, bean.getEmail());
		ps.setString(9, bean.getMobileno());
		ps.setString(10, bean.getDate());
		ps.setString(11, bean.getStatus());

		int index = ps.executeUpdate();

		if (index > 0) {
			flag = true;
		} else {
			flag = false;
		}
	} catch (SQLException e) {

		e.printStackTrace();
	}
	return flag;
	
}

/*================================*/
/*public String extractFileName(Part part) {
	
	final String partHeader = part.getHeader("content-disposition");
    for (String content : part.getHeader("content-disposition").split(";")) {
        if (content.trim().startsWith("filename")) {
            return content.substring(
                    content.indexOf('=') + 1).trim().replace("\"", "");
        }
    }
	return null;
	
}*/

/*public boolean DeleteUser(int id) {
	
	String sql="delete from bookevent where id='"+id+"'";
	 Connection con=DBConnection.getConnection();
	 try {
		ps=con.prepareStatement(sql);
		int index =ps.executeUpdate();
		if(index>0)
		{
			flag=true;
		}
		else
		{
			flag=false;
		}
	} catch (SQLException e) {
		e.printStackTrace();
	}
	 
		return flag;
	
}
*/

public String extractFileName(Part part) {
	String contentDisp = part.getHeader("content-disposition");
	System.out.println("contentDisp:" + contentDisp);
	String[] items = contentDisp.split(";");
	for (String s : items) {
		if (s.trim().startsWith("filename")) {
			return s.substring(s.indexOf("=") + 2, s.length() - 1);
		}
	}
	return "";
}

public boolean InsertKeyDetails(UploadBean bean) {
	try {
		sql="insert into tbl_keydetails(email,filename,filekey,sender_email) values(?,?,?,?)";
		
		Connection con=DBConnection.getConnection();
		
		 ps=con.prepareStatement(sql);
		
		ps.setString(1, bean.getCloudname());
		ps.setString(2, bean.getFilename());
		ps.setString(3, bean.getKey());
		ps.setString(4, bean.getSender_email());
		
		int index=ps.executeUpdate();
		
		if(index>0)
		{
			flag=true;
		}
		
	} catch (SQLException e) {
		
		e.printStackTrace();
	}
	
	return flag;
}


public ResultSet getfilename(String filename) {

	sql = "select filename from tbl_files where filename='" + filename + "'";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);
		rs = ps.executeQuery();

	} catch (SQLException e) {

		e.printStackTrace();
	}
	return rs;
}
public ResultSet getGroupMembers(String groupname) {

	sql = "select * from tbl_user";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);
		rs = ps.executeQuery();

	} catch (SQLException e) {

		e.printStackTrace();
	}
	return rs;
}

public static void insert(UploadBean bean) {
	try {

		PreparedStatement ps;

		String sql = "insert into tbl_audit(username,filename,file,filekey) values(?,?,?,?)";
		Connection con = DBConnection.getConnection();

		ps = con.prepareStatement(sql);

		ps.setString(1, bean.getCloudname());
		ps.setString(2, bean.getFilename());

		ps.setBlob(3, bean.getFile());

		ps.setString(4, bean.getKey());
		int index = ps.executeUpdate();
	} catch (SQLException e) {
		e.printStackTrace();
	}

}

public boolean InsertUsersData(Userbean userbean) {
	sql = "insert into tbl_user values(null,?,?,?,?,?,?,?,?)";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);

		ps.setString(1, userbean.getName());
		ps.setString(2, userbean.getAddress());
		ps.setString(3, userbean.getEmail());
		ps.setString(4, userbean.getMobileno());
		ps.setString(5, userbean.getDob());
		ps.setString(6, userbean.getPassword());
		ps.setString(7, userbean.getGroup());
		ps.setString(8, userbean.getStatus());

		int index = ps.executeUpdate();

		if (index > 0) {
			flag = true;
		} else {
			flag = false;
		}
	} catch (SQLException e) {

		e.printStackTrace();
	}
	return flag;
}

/*public boolean alreadyUser(String email) throws SQLException {
	String sql = "select * from tbl_user where email=?";
	connection = DBConnection.getConnection();
	ps = connection.prepareStatement(sql);
	ps.setString(1, email);
	rs = ps.executeQuery();
	if (rs.next()) {
		resultStatus = true;
	}
	return resultStatus;
}*/

/*public UserBean CheckUser(String email, String password) {

	UserBean bean = new UserBean();
	sql = "select * from tbl_user where email='" + email + "' and password='" + password + "' ";
	try {
		Statement stmt = DBConnection.getConnection().createStatement();
		ResultSet rs = stmt.executeQuery(sql);

		if (rs.next()) {

			bean.setId(rs.getInt(1));
			bean.setName(rs.getString(2));
			bean.setAddress(rs.getString(3));
			bean.setEmail(rs.getString(4));
			bean.setMobileno(rs.getString(5));
			bean.setDob(rs.getString(6));
			bean.setPassword(rs.getString(7));
			bean.setGroup(rs.getString(8));
			bean.setStatus(rs.getString(9));
		}

	} catch (SQLException e) {

		e.printStackTrace();
	}

	return bean;
}*/

public boolean UpdateUserPassword(String oldpass, String newpass) {

	sql = "update tbl_user set password=? where password='" + oldpass + "'";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);
		ps.setString(1, newpass);

		int index = ps.executeUpdate();

		if (index > 0) {
			flag = true;
		}
	} catch (SQLException e) {

		e.printStackTrace();
	}

	return flag;
}

public boolean UpdateUserStatus(int userId, String status) {
	if (status.equalsIgnoreCase("Inactive"))
		status = "Active";
	else
		status = "Inactive";

	String sql = "update tbl_user set status=? where id=?";

	try {
		ps = DBConnection.getConnection().prepareStatement(sql);
		ps.setString(1, status);
		ps.setInt(2, userId);

		int index = ps.executeUpdate();
		if (index > 0) {
			flag = true;
		}
	} catch (SQLException e) {

		e.printStackTrace();
	}
	return flag;
}

public ArrayList<TitleBean> getCategory() throws SQLException {

	String sql = "select * from tbl_files";
	Connection con = DBConnection.getConnection();

	ArrayList<TitleBean> titleList = new ArrayList<TitleBean>();

	Statement st = con.createStatement();

	rs = st.executeQuery(sql);

	while (rs.next()) {
		TitleBean bean = new TitleBean();

		bean.setId(rs.getInt(1));
		bean.setTitle(rs.getString(3));

		titleList.add(bean);
	}

	return titleList;
}

public ResultSet SelectUser() {

	ResultSet rs = null;
	String sql = "Select * from tbl_user";
	try {
		PreparedStatement pstmt = DBConnection.getConnection().prepareStatement(sql);
		rs = pstmt.executeQuery();
	} catch (SQLException e) {

		e.printStackTrace();
	}
	return rs;
}

public boolean DeleteUser(int id) {

	String sql = "delete from user where id='" + id + "'";
	Connection con = DBConnection.getConnection();
	try {
		ps = con.prepareStatement(sql);
		int index = ps.executeUpdate();
		if (index > 0) {
			flag = true;
		} else {
			flag = false;
		}
	} catch (SQLException e) {
		e.printStackTrace();
	}

	return flag;
}

/*public UserBean SelectUserPassword(String email) {

	UserBean bean = new UserBean();

	sql = "select * from tbl_user where email='" + email + "'";

	Connection con = DBConnection.getConnection();

	try {
		ps = con.prepareStatement(sql);

		ResultSet rs = ps.executeQuery();

		if (rs.next()) {
			bean.setName(rs.getString(2));
			bean.setAddress(rs.getString(3));
			bean.setEmail(rs.getString(4));
			bean.setMobileno(rs.getString(5));
			bean.setDob(rs.getString(6));
			bean.setPassword(rs.getString(7));
			bean.setStatus(rs.getString(8));
		}
	} catch (SQLException e) {

		e.printStackTrace();
	}
	return bean;

}
*/
public boolean alreadyImage(String image_name) throws SQLException {
	String sql = "select * from tbl_images where image_name=?";
	connection = DBConnection.getConnection();
	ps = connection.prepareStatement(sql);
	ps.setString(1, image_name);
	rs = ps.executeQuery();
	if (rs.next()) {
		resultStatus = true;
	}
	return resultStatus;
}

public boolean CheckFileContent(String user_email,String file_name,String file_content)
   {
	   UploadBean bean=new UploadBean();
	   
	  String sql="select * from tbl_audit where username='"+user_email+"' && filename='"+file_name+"' && file='"+file_content+"'";
	  
	 Connection con=DBConnection.getConnection();
	 
	 try {
		PreparedStatement ps=con.prepareStatement(sql);
	
		ResultSet rs=ps.executeQuery();
		
		while(rs.next())
		{
			flag=true;
		}
	} catch (SQLException e) {
		
		e.printStackTrace();
	}
	 
	 return flag;
   }

public String key() {

	char[] characterSet = "164".toCharArray();
	int length = 3;
	String filekey = null;

	Random random1 = new SecureRandom();
	char[] result = new char[length];
	for (int i = 0; i < result.length; i++) {

		int randomCharIndex = random1.nextInt(characterSet.length);
		result[i] = characterSet[randomCharIndex];
	}
	filekey = new String(result);
	return filekey;

}

public String key1() {

	char[] characterSet = "456".toCharArray();
	int length = 2;
	String filekey = null;

	Random random1 = new SecureRandom();
	char[] result = new char[length];
	for (int i = 0; i < result.length; i++) {

		int randomCharIndex = random1.nextInt(characterSet.length);
		result[i] = characterSet[randomCharIndex];
	}
	filekey = new String(result);
	return filekey;

}

public boolean DeleteFile(int id) {
	String sql = "delete from tbl_files where id='" + id + "'";
	Connection con = DBConnection.getConnection();
	try {
		ps = con.prepareStatement(sql);
		int index = ps.executeUpdate();
		if (index > 0) {
			flag = true;
		} else {
			flag = false;
		}
	} catch (SQLException e) {
		e.printStackTrace();
	}

	return flag;
}

public boolean InsertFormData(Userbean b) {
	
		sql = "insert into bookevent(image,imagename,selectevent,selecttheme,name,address,email,mobileno,date,status) values(?,?,?,?,?,?,?,?,?,?)";

		Connection con = DBConnection.getConnection();

		try {
			ps = con.prepareStatement(sql);

			ps.setBlob(1, b.getImage());
			ps.setString(2, b.getImage_name());	
			ps.setString(3, b.getSelectevent());
			ps.setString(4, b.getSelecttheme());
			ps.setString(5, b.getName());
			ps.setString(6, b.getAddress());
			ps.setString(7, b.getEmail());
			ps.setString(8, b.getMobileno());
			ps.setString(9, b.getDate());
			ps.setString(10, b.getStatus());

			int index = ps.executeUpdate();

			if (index > 0) {
				flag = true;
			} else {
				flag = false;
			}
		} catch (SQLException e) {

			e.printStackTrace();
		}
		return flag;
	
}



}
